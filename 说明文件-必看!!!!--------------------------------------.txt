总共有三个解决方案：
    coroutine_study                      用X表示
    coroutine_study - CPP                用Y表示
    coroutine_study - detached asm file  用Z表示



1、X 和 Y 都是CPP中嵌入汇编，只支持32位。

2、X包含C和C++代码,Y全是C++代码

3、Z把汇编单独成汇编文件生成链接库后供C/C++调用，同时支持32位和64位。

4、Z是最终版本，其它版本都是早期版本!!

5、所有工程在"release模式+禁止优化"条件下 都不会有问题（不管是Win32还是X64模式）

6、所有功能在X64模式下都不会有问题

7、某些工程在 DUBUG或"release模式+最大优化"条件下会出现崩溃现象，暂未发现原因，猜测是因为堆栈被破坏或上下文被
   破坏，因为这些工程既有C/C++代码又有汇编，而汇编代码固定不变，C/C++代码会随着编译选项的不同而生成不同的汇编
   代码，因此这之间发生了什么我暂时还不清楚原因，具体使用时某些工程请使用 "release模式+禁止优化" 模式!!!这些
   工程具体包括:coroutine_shared_stack_lower 和 coroutine_shared_stack，使用这两个工程时请注意.